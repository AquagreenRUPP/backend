{"ast":null,"code":"import _regeneratorRuntime from \"D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  name: 'UploadView',\n  data: function data() {\n    return {\n      title: '',\n      file: null,\n      fileError: null\n    };\n  },\n  computed: _objectSpread({}, mapState(['loading', 'error'])),\n  methods: _objectSpread(_objectSpread({}, mapActions(['uploadFile'])), {}, {\n    handleFileChange: function handleFileChange(event) {\n      var selectedFile = event.target.files[0];\n      this.fileError = null;\n      if (!selectedFile) {\n        this.file = null;\n        return;\n      }\n\n      // Check file type\n      var validTypes = ['application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\n      if (!validTypes.includes(selectedFile.type)) {\n        this.fileError = 'Invalid file type. Please upload an Excel file (.xlsx or .xls)';\n        this.file = null;\n        return;\n      }\n\n      // Check file size (10MB max)\n      var maxSize = 10 * 1024 * 1024; // 10MB in bytes\n      if (selectedFile.size > maxSize) {\n        this.fileError = 'File is too large. Maximum size is 10MB';\n        this.file = null;\n        return;\n      }\n      this.file = selectedFile;\n    },\n    uploadFile: function uploadFile() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (_this.file) {\n                _context.next = 3;\n                break;\n              }\n              _this.fileError = 'Please select a file to upload';\n              return _context.abrupt(\"return\");\n            case 3:\n              _context.prev = 3;\n              _context.next = 6;\n              return _this.$store.dispatch('uploadFile', {\n                title: _this.title,\n                file: _this.file\n              });\n            case 6:\n              // Reset form\n              _this.title = '';\n              _this.file = null;\n              document.getElementById('file').value = '';\n\n              // Show success message\n              _this.$toast.success('File uploaded successfully');\n\n              // Redirect to files page\n              _this.$router.push('/files');\n              _context.next = 16;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](3);\n              _this.fileError = _context.t0.message || 'Failed to upload file';\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[3, 13]]);\n      }))();\n    }\n  })\n};","map":{"version":3,"names":["mapState","mapActions","name","data","title","file","fileError","computed","_objectSpread","methods","handleFileChange","event","selectedFile","target","files","validTypes","includes","type","maxSize","size","uploadFile","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","$store","dispatch","document","getElementById","value","$toast","success","$router","push","t0","message","stop"],"sources":["D:\\DSE_Folder\\Year_3\\Sem_2\\Web_Agri_DJango\\frontend\\src\\views\\UploadView.vue"],"sourcesContent":["<template>\n  <div class=\"upload-view\">\n    <h1 class=\"text-success mb-4\">Upload Greenhouse Data</h1>\n    \n    <div class=\"card border-success mb-4\">\n      <div class=\"card-header bg-success text-white\">\n        <h5 class=\"card-title mb-0\">Upload Excel File</h5>\n      </div>\n      <div class=\"card-body\">\n        <form @submit.prevent=\"uploadFile\">\n          <div class=\"mb-3\">\n            <label for=\"title\" class=\"form-label\">Title</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"title\"\n              v-model=\"title\"\n              placeholder=\"Enter a descriptive title for your data\"\n              required\n            />\n            <div class=\"form-text\">Give your file a meaningful name related to your greenhouse data.</div>\n          </div>\n          \n          <div class=\"mb-3\">\n            <label for=\"file\" class=\"form-label\">Excel File</label>\n            <input\n              type=\"file\"\n              class=\"form-control\"\n              id=\"file\"\n              @change=\"handleFileChange\"\n              accept=\".xlsx,.xls\"\n              required\n            />\n            <div class=\"form-text\">Accepted formats: .xlsx, .xls (Excel files only)</div>\n          </div>\n          \n          <div v-if=\"fileError\" class=\"alert alert-danger\">\n            {{ fileError }}\n          </div>\n          \n          <div class=\"d-grid gap-2\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-success\"\n              :disabled=\"loading || !file\"\n            >\n              <span v-if=\"loading\" class=\"spinner-border spinner-border-sm me-2\"></span>\n              Upload and Process\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n    \n    <div class=\"card border-success\">\n      <div class=\"card-header bg-success text-white\">\n        <h5 class=\"card-title mb-0\">Upload Guidelines</h5>\n      </div>\n      <div class=\"card-body\">\n        <h6 class=\"card-subtitle mb-3 text-success\">How to prepare your greenhouse data files:</h6>\n        <ul class=\"list-group list-group-flush mb-3\">\n          <li class=\"list-group-item bg-light\">\n            <i class=\"bi bi-check-circle-fill text-success me-2\"></i>\n            Ensure your Excel file contains greenhouse sensor data in a structured format\n          </li>\n          <li class=\"list-group-item\">\n            <i class=\"bi bi-check-circle-fill text-success me-2\"></i>\n            Our system automatically detects and processes all columns in your Excel file\n          </li>\n          <li class=\"list-group-item bg-light\">\n            <i class=\"bi bi-check-circle-fill text-success me-2\"></i>\n            Include headers in your Excel file for better data identification\n          </li>\n          <li class=\"list-group-item\">\n            <i class=\"bi bi-check-circle-fill text-success me-2\"></i>\n            Maximum file size: 10MB\n          </li>\n        </ul>\n        <div class=\"alert alert-success\">\n          <i class=\"bi bi-info-circle-fill me-2\"></i>\n          After uploading, you can view and analyze your data in the <router-link to=\"/files\" class=\"alert-link\">Files section</router-link>.\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n  name: 'UploadView',\n  data() {\n    return {\n      title: '',\n      file: null,\n      fileError: null\n    };\n  },\n  computed: {\n    ...mapState(['loading', 'error'])\n  },\n  methods: {\n    ...mapActions(['uploadFile']),\n    handleFileChange(event) {\n      const selectedFile = event.target.files[0];\n      this.fileError = null;\n      \n      if (!selectedFile) {\n        this.file = null;\n        return;\n      }\n      \n      // Check file type\n      const validTypes = ['application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\n      if (!validTypes.includes(selectedFile.type)) {\n        this.fileError = 'Invalid file type. Please upload an Excel file (.xlsx or .xls)';\n        this.file = null;\n        return;\n      }\n      \n      // Check file size (10MB max)\n      const maxSize = 10 * 1024 * 1024; // 10MB in bytes\n      if (selectedFile.size > maxSize) {\n        this.fileError = 'File is too large. Maximum size is 10MB';\n        this.file = null;\n        return;\n      }\n      \n      this.file = selectedFile;\n    },\n    async uploadFile() {\n      if (!this.file) {\n        this.fileError = 'Please select a file to upload';\n        return;\n      }\n      \n      try {\n        await this.$store.dispatch('uploadFile', {\n          title: this.title,\n          file: this.file\n        });\n        \n        // Reset form\n        this.title = '';\n        this.file = null;\n        document.getElementById('file').value = '';\n        \n        // Show success message\n        this.$toast.success('File uploaded successfully');\n        \n        // Redirect to files page\n        this.$router.push('/files');\n      } catch (error) {\n        this.fileError = error.message || 'Failed to upload file';\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.card {\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n  border-radius: 8px;\n}\n\n.list-group-item {\n  border-left: none;\n  border-right: none;\n}\n\n.list-group-item:first-child {\n  border-top: none;\n}\n\n.list-group-item:last-child {\n  border-bottom: none;\n}\n</style>\n"],"mappings":";;;;;AAwFA,SAASA,QAAQ,EAAEC,UAAS,QAAS,MAAM;AAE3C,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,IAAI;MACVC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,QAAQ,EAAAC,aAAA,KACHR,QAAQ,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,EACjC;EACDS,OAAO,EAAAD,aAAA,CAAAA,aAAA,KACFP,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7BS,gBAAgB,WAAhBA,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAMC,YAAW,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAC1C,IAAI,CAACR,SAAQ,GAAI,IAAI;MAErB,IAAI,CAACM,YAAY,EAAE;QACjB,IAAI,CAACP,IAAG,GAAI,IAAI;QAChB;MACF;;MAEA;MACA,IAAMU,UAAS,GAAI,CAAC,0BAA0B,EAAE,mEAAmE,CAAC;MACpH,IAAI,CAACA,UAAU,CAACC,QAAQ,CAACJ,YAAY,CAACK,IAAI,CAAC,EAAE;QAC3C,IAAI,CAACX,SAAQ,GAAI,gEAAgE;QACjF,IAAI,CAACD,IAAG,GAAI,IAAI;QAChB;MACF;;MAEA;MACA,IAAMa,OAAM,GAAI,EAAC,GAAI,IAAG,GAAI,IAAI,EAAE;MAClC,IAAIN,YAAY,CAACO,IAAG,GAAID,OAAO,EAAE;QAC/B,IAAI,CAACZ,SAAQ,GAAI,yCAAyC;QAC1D,IAAI,CAACD,IAAG,GAAI,IAAI;QAChB;MACF;MAEA,IAAI,CAACA,IAAG,GAAIO,YAAY;IAC1B,CAAC;IACKQ,UAAU,WAAVA,UAAUA,CAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,IACZT,KAAI,CAAChB,IAAI;gBAAAuB,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACZT,KAAI,CAACf,SAAQ,GAAI,gCAAgC;cAAA,OAAAsB,QAAA,CAAAG,MAAA;YAAA;cAAAH,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAK3CT,KAAI,CAACW,MAAM,CAACC,QAAQ,CAAC,YAAY,EAAE;gBACvC7B,KAAK,EAAEiB,KAAI,CAACjB,KAAK;gBACjBC,IAAI,EAAEgB,KAAI,CAAChB;cACb,CAAC,CAAC;YAAA;cAEF;cACAgB,KAAI,CAACjB,KAAI,GAAI,EAAE;cACfiB,KAAI,CAAChB,IAAG,GAAI,IAAI;cAChB6B,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,KAAI,GAAI,EAAE;;cAE1C;cACAf,KAAI,CAACgB,MAAM,CAACC,OAAO,CAAC,4BAA4B,CAAC;;cAEjD;cACAjB,KAAI,CAACkB,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;cAAAZ,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAa,EAAA,GAAAb,QAAA;cAE3BP,KAAI,CAACf,SAAQ,GAAIsB,QAAA,CAAAa,EAAA,CAAMC,OAAM,IAAK,uBAAuB;YAAA;YAAA;cAAA,OAAAd,QAAA,CAAAe,IAAA;UAAA;QAAA,GAAAlB,OAAA;MAAA;IAE7D;EAAA;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}