{"ast":null,"code":"import _regeneratorRuntime from \"D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  name: 'FileDetailView',\n  props: {\n    id: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      processingFile: false\n    };\n  },\n  computed: _objectSpread({}, mapState(['currentFile', 'processedData', 'loading', 'error'])),\n  mounted: function mounted() {\n    this.fetchFileData();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(['fetchFile', 'fetchProcessedData', 'processFile'])), {}, {\n    fetchFileData: function fetchFileData() {\n      this.$store.dispatch('fetchFile', this.id);\n      this.$store.dispatch('fetchProcessedData', this.id);\n    },\n    refreshData: function refreshData() {\n      this.fetchFileData();\n    },\n    processFile: function processFile(fileId) {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.processingFile = true;\n              _context.prev = 1;\n              _context.next = 4;\n              return _this.$store.dispatch('processFile', fileId);\n            case 4:\n              _this.$toast.success('File processed successfully');\n              _this.fetchFileData();\n              _context.next = 12;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              _this.$toast.error('Failed to process file');\n              console.error('Error processing file:', _context.t0);\n            case 12:\n              _context.prev = 12;\n              _this.processingFile = false;\n              return _context.finish(12);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 8, 12, 15]]);\n      }))();\n    },\n    formatDate: function formatDate(dateString) {\n      if (!dateString) return '';\n      var date = new Date(dateString);\n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    },\n    formatColumnName: function formatColumnName(key) {\n      if (!key) return '';\n\n      // Convert snake_case or camelCase to Title Case\n      return key.replace(/_/g, ' ').replace(/([A-Z])/g, ' $1').replace(/^./, function (str) {\n        return str.toUpperCase();\n      }).trim();\n    },\n    exportCSV: function exportCSV() {\n      var _this2 = this,\n        _this$currentFile;\n      if (!this.processedData || this.processedData.length === 0) {\n        this.$toast.error('No data to export');\n        return;\n      }\n\n      // Get all unique keys from all objects\n      var allKeys = this.processedData.reduce(function (keys, item) {\n        Object.keys(item).forEach(function (key) {\n          if (!keys.includes(key)) {\n            keys.push(key);\n          }\n        });\n        return keys;\n      }, []);\n\n      // Create CSV header row\n      var csv = allKeys.map(function (key) {\n        return \"\\\"\".concat(_this2.formatColumnName(key), \"\\\"\");\n      }).join(',') + '\\n';\n\n      // Add data rows\n      this.processedData.forEach(function (item) {\n        var row = allKeys.map(function (key) {\n          var value = item[key] !== undefined ? item[key] : '';\n          return \"\\\"\".concat(value, \"\\\"\");\n        }).join(',');\n        csv += row + '\\n';\n      });\n\n      // Create download link\n      var blob = new Blob([csv], {\n        type: 'text/csv;charset=utf-8;'\n      });\n      var url = URL.createObjectURL(blob);\n      var link = document.createElement('a');\n      link.setAttribute('href', url);\n      link.setAttribute('download', \"\".concat(((_this$currentFile = this.currentFile) === null || _this$currentFile === void 0 ? void 0 : _this$currentFile.title) || 'data', \"_export.csv\"));\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  })\n};","map":{"version":3,"names":["mapState","mapActions","name","props","id","type","String","Number","required","data","processingFile","computed","_objectSpread","mounted","fetchFileData","methods","$store","dispatch","refreshData","processFile","fileId","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$toast","success","t0","error","console","finish","stop","formatDate","dateString","date","Date","Intl","DateTimeFormat","year","month","day","hour","minute","format","formatColumnName","key","replace","str","toUpperCase","trim","exportCSV","_this2","_this$currentFile","processedData","length","allKeys","reduce","keys","item","Object","forEach","includes","push","csv","map","concat","join","row","value","undefined","blob","Blob","url","URL","createObjectURL","link","document","createElement","setAttribute","currentFile","title","style","visibility","body","appendChild","click","removeChild"],"sources":["D:\\DSE_Folder\\Year_3\\Sem_2\\Web_Agri_DJango\\frontend\\src\\views\\FileDetailView.vue"],"sourcesContent":["<template>\n  <div class=\"file-detail\">\n    <div v-if=\"loading\" class=\"text-center my-5\">\n      <div class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n      <p class=\"mt-2\">Loading data...</p>\n    </div>\n\n    <div v-else-if=\"error\" class=\"alert alert-danger\">\n      {{ error }}\n    </div>\n\n    <div v-else-if=\"!currentFile\" class=\"alert alert-warning\">\n      File not found. <router-link to=\"/files\">Return to files list</router-link>.\n    </div>\n\n    <div v-else>\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\n        <h1>{{ currentFile.title }}</h1>\n        <router-link to=\"/files\" class=\"btn btn-outline-secondary\">\n          Back to Files\n        </router-link>\n      </div>\n\n      <div class=\"card mb-4\">\n        <div class=\"card-header bg-light\">\n          <h5 class=\"card-title mb-0\">File Information</h5>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <p><strong>Upload Date:</strong> {{ formatDate(currentFile.uploaded_at) }}</p>\n              <p><strong>Status:</strong> \n                <span \n                  :class=\"currentFile.processed ? 'badge bg-success' : 'badge bg-warning text-dark'\"\n                >\n                  {{ currentFile.processed ? 'Processed' : 'Pending' }}\n                </span>\n              </p>\n            </div>\n            <div class=\"col-md-6\">\n              <p><strong>File ID:</strong> {{ currentFile.id }}</p>\n              <p v-if=\"!currentFile.processed\">\n                <button \n                  class=\"btn btn-sm btn-primary\"\n                  @click=\"processFile(currentFile.id)\"\n                  :disabled=\"processingFile\"\n                >\n                  <span v-if=\"processingFile\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>\n                  Process File\n                </button>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"card\">\n        <div class=\"card-header bg-light d-flex justify-content-between align-items-center\">\n          <h5 class=\"card-title mb-0\">Processed Data</h5>\n          <div class=\"btn-group\" role=\"group\">\n            <button class=\"btn btn-sm btn-outline-primary\" @click=\"refreshData\">\n              <i class=\"bi bi-arrow-clockwise me-1\"></i> Refresh\n            </button>\n            <button class=\"btn btn-sm btn-outline-success\" @click=\"exportCSV\">\n              <i class=\"bi bi-download me-1\"></i> Export CSV\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\">\n          <div v-if=\"!currentFile.processed && !processedData\" class=\"alert alert-warning\">\n            This file has not been processed yet. Click \"Process File\" to extract the data.\n          </div>\n          \n          <div v-else-if=\"!processedData || processedData.length === 0\" class=\"alert alert-info\">\n            No processed data available for this file.\n          </div>\n          \n          <div v-else>\n            <!-- Data Table -->\n            <div class=\"table-responsive\">\n              <table class=\"table table-striped table-hover\">\n                <thead>\n                  <tr>\n                    <th v-for=\"(_, key) in processedData[0]\" :key=\"key\">{{ formatColumnName(key) }}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"(row, index) in processedData\" :key=\"index\">\n                    <td v-for=\"(value, key) in row\" :key=\"key\">{{ value }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            \n            <!-- Power BI Iframe Preview Placeholder -->\n            <div class=\"mt-4\">\n              <h5>Data Visualization</h5>\n              <div class=\"alert alert-info\">\n                Power BI integration will be available in a future update.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\n\nexport default {\n  name: 'FileDetailView',\n  props: {\n    id: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data() {\n    return {\n      processingFile: false\n    }\n  },\n  computed: {\n    ...mapState(['currentFile', 'processedData', 'loading', 'error'])\n  },\n  mounted() {\n    this.fetchFileData()\n  },\n  methods: {\n    ...mapActions(['fetchFile', 'fetchProcessedData', 'processFile']),\n    fetchFileData() {\n      this.$store.dispatch('fetchFile', this.id)\n      this.$store.dispatch('fetchProcessedData', this.id)\n    },\n    refreshData() {\n      this.fetchFileData()\n    },\n    async processFile(fileId) {\n      this.processingFile = true\n      \n      try {\n        await this.$store.dispatch('processFile', fileId)\n        this.$toast.success('File processed successfully')\n        this.fetchFileData()\n      } catch (error) {\n        this.$toast.error('Failed to process file')\n        console.error('Error processing file:', error)\n      } finally {\n        this.processingFile = false\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return ''\n      \n      const date = new Date(dateString)\n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date)\n    },\n    formatColumnName(key) {\n      if (!key) return ''\n      \n      // Convert snake_case or camelCase to Title Case\n      return key\n        .replace(/_/g, ' ')\n        .replace(/([A-Z])/g, ' $1')\n        .replace(/^./, str => str.toUpperCase())\n        .trim()\n    },\n    exportCSV() {\n      if (!this.processedData || this.processedData.length === 0) {\n        this.$toast.error('No data to export')\n        return\n      }\n      \n      // Get all unique keys from all objects\n      const allKeys = this.processedData.reduce((keys, item) => {\n        Object.keys(item).forEach(key => {\n          if (!keys.includes(key)) {\n            keys.push(key)\n          }\n        })\n        return keys\n      }, [])\n      \n      // Create CSV header row\n      let csv = allKeys.map(key => `\"${this.formatColumnName(key)}\"`).join(',') + '\\n'\n      \n      // Add data rows\n      this.processedData.forEach(item => {\n        const row = allKeys.map(key => {\n          const value = item[key] !== undefined ? item[key] : ''\n          return `\"${value}\"`\n        }).join(',')\n        csv += row + '\\n'\n      })\n      \n      // Create download link\n      const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' })\n      const url = URL.createObjectURL(blob)\n      const link = document.createElement('a')\n      link.setAttribute('href', url)\n      link.setAttribute('download', `${this.currentFile?.title || 'data'}_export.csv`)\n      link.style.visibility = 'hidden'\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n    }\n  }\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}