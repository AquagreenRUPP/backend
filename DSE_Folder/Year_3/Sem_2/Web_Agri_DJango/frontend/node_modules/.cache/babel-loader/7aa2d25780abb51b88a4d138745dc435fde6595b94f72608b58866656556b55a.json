{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  name: 'UploadView',\n  data() {\n    return {\n      title: '',\n      file: null,\n      uploadSuccess: false,\n      uploadedFileId: null\n    };\n  },\n  computed: {\n    ...mapGetters(['isLoading', 'getError']),\n    loading() {\n      return this.isLoading;\n    },\n    error() {\n      return this.getError;\n    }\n  },\n  methods: {\n    handleFileChange(event) {\n      this.file = event.target.files[0];\n    },\n    async uploadFile() {\n      if (!this.file) {\n        return;\n      }\n      try {\n        const response = await this.$store.dispatch('uploadFile', {\n          title: this.title,\n          file: this.file\n        });\n        if (response && response.file && response.file.id) {\n          this.uploadSuccess = true;\n          this.uploadedFileId = response.file.id;\n          this.title = '';\n          this.file = null;\n          // Reset the file input\n          document.getElementById('file').value = '';\n        }\n      } catch (error) {\n        console.error('Error in upload component:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","title","file","uploadSuccess","uploadedFileId","computed","loading","isLoading","error","getError","methods","handleFileChange","event","target","files","uploadFile","response","$store","dispatch","id","document","getElementById","value","console"],"sources":["D:\\DSE_Folder\\Year_3\\Sem_2\\Web_Agri_DJango\\frontend\\src\\views\\UploadView.vue"],"sourcesContent":["<template>\n  <div class=\"upload\">\n    <h1>Upload Excel File</h1>\n    <p class=\"lead mb-4\">Upload your Excel file to process and extract data.</p>\n\n    <div class=\"alert alert-danger\" v-if=\"error\">\n      {{ error }}\n    </div>\n\n    <div class=\"alert alert-success\" v-if=\"uploadSuccess\">\n      File uploaded successfully! <router-link :to=\"'/files/' + uploadedFileId\">View processed data</router-link>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <form @submit.prevent=\"uploadFile\" enctype=\"multipart/form-data\">\n          <div class=\"mb-3\">\n            <label for=\"title\" class=\"form-label\">File Title</label>\n            <input \n              type=\"text\" \n              class=\"form-control\" \n              id=\"title\" \n              v-model=\"title\" \n              placeholder=\"Enter a descriptive title for the file\"\n              required\n            >\n          </div>\n          \n          <div class=\"mb-3\">\n            <label for=\"file\" class=\"form-label\">Excel File</label>\n            <input \n              type=\"file\" \n              class=\"form-control\" \n              id=\"file\" \n              @change=\"handleFileChange\" \n              accept=\".xlsx,.xls\"\n              required\n            >\n            <div class=\"form-text\">Only Excel files (.xlsx, .xls) are accepted.</div>\n          </div>\n          \n          <div class=\"d-grid gap-2\">\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading || !file\">\n              <span v-if=\"loading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n              {{ loading ? 'Uploading...' : 'Upload File' }}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <div class=\"mt-4\">\n      <h3>Upload Instructions</h3>\n      <ol class=\"list-group list-group-numbered mb-4\">\n        <li class=\"list-group-item\">Prepare your Excel file with properly formatted data</li>\n        <li class=\"list-group-item\">Enter a descriptive title for your file</li>\n        <li class=\"list-group-item\">Select the Excel file from your computer</li>\n        <li class=\"list-group-item\">Click the \"Upload File\" button</li>\n        <li class=\"list-group-item\">Wait for the file to be processed</li>\n      </ol>\n      <p>After uploading, you'll be able to view the processed data and visualize it.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'UploadView',\n  data() {\n    return {\n      title: '',\n      file: null,\n      uploadSuccess: false,\n      uploadedFileId: null\n    }\n  },\n  computed: {\n    ...mapGetters(['isLoading', 'getError']),\n    loading() {\n      return this.isLoading\n    },\n    error() {\n      return this.getError\n    }\n  },\n  methods: {\n    handleFileChange(event) {\n      this.file = event.target.files[0]\n    },\n    async uploadFile() {\n      if (!this.file) {\n        return\n      }\n      \n      try {\n        const response = await this.$store.dispatch('uploadFile', {\n          title: this.title,\n          file: this.file\n        })\n        \n        if (response && response.file && response.file.id) {\n          this.uploadSuccess = true\n          this.uploadedFileId = response.file.id\n          this.title = ''\n          this.file = null\n          // Reset the file input\n          document.getElementById('file').value = ''\n        }\n      } catch (error) {\n        console.error('Error in upload component:', error)\n      }\n    }\n  }\n}\n</script>\n"],"mappings":"AAkEA,SAASA,UAAS,QAAS,MAAK;AAEhC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,IAAI;MACVC,aAAa,EAAE,KAAK;MACpBC,cAAc,EAAE;IAClB;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGP,UAAU,CAAC,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;IACxCQ,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACC,SAAQ;IACtB,CAAC;IACDC,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAACC,QAAO;IACrB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACV,IAAG,GAAIU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;IAClC,CAAC;IACD,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAACb,IAAI,EAAE;QACd;MACF;MAEA,IAAI;QACF,MAAMc,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,YAAY,EAAE;UACxDjB,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,IAAI,EAAE,IAAI,CAACA;QACb,CAAC;QAED,IAAIc,QAAO,IAAKA,QAAQ,CAACd,IAAG,IAAKc,QAAQ,CAACd,IAAI,CAACiB,EAAE,EAAE;UACjD,IAAI,CAAChB,aAAY,GAAI,IAAG;UACxB,IAAI,CAACC,cAAa,GAAIY,QAAQ,CAACd,IAAI,CAACiB,EAAC;UACrC,IAAI,CAAClB,KAAI,GAAI,EAAC;UACd,IAAI,CAACC,IAAG,GAAI,IAAG;UACf;UACAkB,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,KAAI,GAAI,EAAC;QAC3C;MACF,EAAE,OAAOd,KAAK,EAAE;QACde,OAAO,CAACf,KAAK,CAAC,4BAA4B,EAAEA,KAAK;MACnD;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}