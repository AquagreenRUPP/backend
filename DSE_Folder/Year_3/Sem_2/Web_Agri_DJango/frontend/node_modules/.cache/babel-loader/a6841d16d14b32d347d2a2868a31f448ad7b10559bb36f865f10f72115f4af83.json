{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"upload\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"alert alert-danger\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"alert alert-success\"\n};\nconst _hoisted_4 = {\n  class: \"card\"\n};\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = {\n  class: \"mb-3\"\n};\nconst _hoisted_7 = {\n  class: \"mb-3\"\n};\nconst _hoisted_8 = {\n  class: \"d-grid gap-2\"\n};\nconst _hoisted_9 = [\"disabled\"];\nconst _hoisted_10 = {\n  key: 0,\n  class: \"spinner-border spinner-border-sm me-2\",\n  role: \"status\",\n  \"aria-hidden\": \"true\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[8] || (_cache[8] = _createElementVNode(\"h1\", null, \"Upload Excel File\", -1 /* HOISTED */)), _cache[9] || (_cache[9] = _createElementVNode(\"p\", {\n    class: \"lead mb-4\"\n  }, \"Upload your Excel file to process and extract data.\", -1 /* HOISTED */)), $options.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($options.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.uploadSuccess ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createTextVNode(\" File uploaded successfully! \")), _createVNode(_component_router_link, {\n    to: '/files/' + $data.uploadedFileId\n  }, {\n    default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"View processed data\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.uploadFile && $options.uploadFile(...args), [\"prevent\"])),\n    enctype: \"multipart/form-data\"\n  }, [_createElementVNode(\"div\", _hoisted_6, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"title\",\n    class: \"form-label\"\n  }, \"File Title\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event),\n    placeholder: \"Enter a descriptive title for the file\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"file\",\n    class: \"form-label\"\n  }, \"Excel File\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    class: \"form-control\",\n    id: \"file\",\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.handleFileChange && $options.handleFileChange(...args)),\n    accept: \".xlsx,.xls\",\n    required: \"\"\n  }, null, 32 /* NEED_HYDRATION */), _cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    class: \"form-text\"\n  }, \"Only Excel files (.xlsx, .xls) are accepted.\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\",\n    disabled: $options.loading || !$data.file\n  }, [$options.loading ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10)) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" \" + _toDisplayString($options.loading ? 'Uploading...' : 'Upload File'), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_9)])], 32 /* NEED_HYDRATION */)])]), _cache[10] || (_cache[10] = _createStaticVNode(\"<div class=\\\"mt-4\\\"><h3>Upload Instructions</h3><ol class=\\\"list-group list-group-numbered mb-4\\\"><li class=\\\"list-group-item\\\">Prepare your Excel file with properly formatted data</li><li class=\\\"list-group-item\\\">Enter a descriptive title for your file</li><li class=\\\"list-group-item\\\">Select the Excel file from your computer</li><li class=\\\"list-group-item\\\">Click the &quot;Upload File&quot; button</li><li class=\\\"list-group-item\\\">Wait for the file to be processed</li></ol><p>After uploading, you&#39;ll be able to view the processed data and visualize it.</p></div>\", 1))]);\n}","map":{"version":3,"names":["class","key","role","_createElementBlock","_hoisted_1","_createElementVNode","$options","error","_hoisted_2","_toDisplayString","_createCommentVNode","$data","uploadSuccess","_hoisted_3","_createTextVNode","_createVNode","_component_router_link","to","uploadedFileId","default","_withCtx","_cache","_","_hoisted_4","_hoisted_5","onSubmit","_withModifiers","args","uploadFile","enctype","_hoisted_6","for","type","id","$event","title","placeholder","required","_hoisted_7","onChange","handleFileChange","accept","_hoisted_8","disabled","loading","file","_hoisted_10","_hoisted_9","_createStaticVNode"],"sources":["D:\\DSE_Folder\\Year_3\\Sem_2\\Web_Agri_DJango\\frontend\\src\\views\\UploadView.vue"],"sourcesContent":["<template>\n  <div class=\"upload\">\n    <h1>Upload Excel File</h1>\n    <p class=\"lead mb-4\">Upload your Excel file to process and extract data.</p>\n\n    <div class=\"alert alert-danger\" v-if=\"error\">\n      {{ error }}\n    </div>\n\n    <div class=\"alert alert-success\" v-if=\"uploadSuccess\">\n      File uploaded successfully! <router-link :to=\"'/files/' + uploadedFileId\">View processed data</router-link>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <form @submit.prevent=\"uploadFile\" enctype=\"multipart/form-data\">\n          <div class=\"mb-3\">\n            <label for=\"title\" class=\"form-label\">File Title</label>\n            <input \n              type=\"text\" \n              class=\"form-control\" \n              id=\"title\" \n              v-model=\"title\" \n              placeholder=\"Enter a descriptive title for the file\"\n              required\n            >\n          </div>\n          \n          <div class=\"mb-3\">\n            <label for=\"file\" class=\"form-label\">Excel File</label>\n            <input \n              type=\"file\" \n              class=\"form-control\" \n              id=\"file\" \n              @change=\"handleFileChange\" \n              accept=\".xlsx,.xls\"\n              required\n            >\n            <div class=\"form-text\">Only Excel files (.xlsx, .xls) are accepted.</div>\n          </div>\n          \n          <div class=\"d-grid gap-2\">\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading || !file\">\n              <span v-if=\"loading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n              {{ loading ? 'Uploading...' : 'Upload File' }}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <div class=\"mt-4\">\n      <h3>Upload Instructions</h3>\n      <ol class=\"list-group list-group-numbered mb-4\">\n        <li class=\"list-group-item\">Prepare your Excel file with properly formatted data</li>\n        <li class=\"list-group-item\">Enter a descriptive title for your file</li>\n        <li class=\"list-group-item\">Select the Excel file from your computer</li>\n        <li class=\"list-group-item\">Click the \"Upload File\" button</li>\n        <li class=\"list-group-item\">Wait for the file to be processed</li>\n      </ol>\n      <p>After uploading, you'll be able to view the processed data and visualize it.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'UploadView',\n  data() {\n    return {\n      title: '',\n      file: null,\n      uploadSuccess: false,\n      uploadedFileId: null\n    }\n  },\n  computed: {\n    ...mapGetters(['isLoading', 'getError']),\n    loading() {\n      return this.isLoading\n    },\n    error() {\n      return this.getError\n    }\n  },\n  methods: {\n    handleFileChange(event) {\n      this.file = event.target.files[0]\n    },\n    async uploadFile() {\n      if (!this.file) {\n        return\n      }\n      \n      try {\n        const response = await this.$store.dispatch('uploadFile', {\n          title: this.title,\n          file: this.file\n        })\n        \n        if (response && response.file && response.file.id) {\n          this.uploadSuccess = true\n          this.uploadedFileId = response.file.id\n          this.title = ''\n          this.file = null\n          // Reset the file input\n          document.getElementById('file').value = ''\n        }\n      } catch (error) {\n        console.error('Error in upload component:', error)\n      }\n    }\n  }\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}