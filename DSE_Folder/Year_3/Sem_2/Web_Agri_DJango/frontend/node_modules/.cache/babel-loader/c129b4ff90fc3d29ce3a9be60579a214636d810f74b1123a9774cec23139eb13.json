{"ast":null,"code":"import _regeneratorRuntime from \"D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  name: 'FilesView',\n  data: function data() {\n    return {\n      searchTerm: '',\n      processingFile: null\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState(['files', 'loading', 'error'])), {}, {\n    filteredFiles: function filteredFiles() {\n      if (!this.searchTerm) return this.files;\n      var term = this.searchTerm.toLowerCase();\n      return this.files.filter(function (file) {\n        return file.title.toLowerCase().includes(term);\n      });\n    }\n  }),\n  created: function created() {\n    this.fetchFiles();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(['fetchFiles', 'processFile'])), {}, {\n    processFile: function processFile(fileId) {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.processingFile = fileId;\n              _context.prev = 1;\n              _context.next = 4;\n              return _this.$store.dispatch('processFile', fileId);\n            case 4:\n              _context.next = 6;\n              return _this.fetchFiles();\n            case 6:\n              _this.$toast.success('File processed successfully');\n              _context.next = 13;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              _this.$toast.error('Failed to process file');\n              console.error('Error processing file:', _context.t0);\n            case 13:\n              _context.prev = 13;\n              _this.processingFile = null;\n              return _context.finish(13);\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 9, 13, 16]]);\n      }))();\n    },\n    formatDate: function formatDate(dateString) {\n      if (!dateString) return '';\n      var date = new Date(dateString);\n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    }\n  })\n};","map":{"version":3,"names":["mapState","mapActions","name","data","searchTerm","processingFile","computed","_objectSpread","filteredFiles","files","term","toLowerCase","filter","file","title","includes","created","fetchFiles","methods","processFile","fileId","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$store","dispatch","$toast","success","t0","error","console","finish","stop","formatDate","dateString","date","Date","Intl","DateTimeFormat","year","month","day","hour","minute","format"],"sources":["D:\\DSE_Folder\\Year_3\\Sem_2\\Web_Agri_DJango\\frontend\\src\\views\\FilesView.vue"],"sourcesContent":["<template>\n  <div class=\"files-view\">\n    <h1 class=\"text-success mb-4\">Greenhouse Data Files</h1>\n    \n    <div v-if=\"loading\" class=\"text-center my-5\">\n      <div class=\"spinner-border text-success\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n      <p class=\"mt-2\">Loading files...</p>\n    </div>\n    \n    <div v-else-if=\"error\" class=\"alert alert-danger\">\n      {{ error }}\n    </div>\n    \n    <div v-else-if=\"files.length === 0\" class=\"alert alert-info\">\n      <p class=\"mb-0\">No files uploaded yet. <router-link to=\"/upload\" class=\"alert-link\">Upload your first file</router-link>.</p>\n    </div>\n    \n    <div v-else>\n      <div class=\"mb-3\">\n        <div class=\"input-group\">\n          <span class=\"input-group-text bg-success text-white\">\n            <i class=\"bi bi-search\"></i>\n          </span>\n          <input \n            type=\"text\" \n            class=\"form-control border-success\" \n            placeholder=\"Search files...\" \n            v-model=\"searchTerm\"\n          >\n        </div>\n      </div>\n      \n      <div class=\"table-responsive\">\n        <table class=\"table table-hover\">\n          <thead class=\"bg-success text-white\">\n            <tr>\n              <th>Title</th>\n              <th>Upload Date</th>\n              <th>Status</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"file in filteredFiles\" :key=\"file.id\">\n              <td>{{ file.title }}</td>\n              <td>{{ formatDate(file.uploaded_at) }}</td>\n              <td>\n                <span \n                  class=\"badge\" \n                  :class=\"file.processed ? 'bg-success' : 'bg-warning text-dark'\"\n                >\n                  {{ file.processed ? 'Processed' : 'Pending' }}\n                </span>\n              </td>\n              <td>\n                <div class=\"btn-group\">\n                  <router-link \n                    :to=\"{ name: 'file-detail', params: { id: file.id }}\" \n                    class=\"btn btn-sm btn-outline-success\"\n                  >\n                    View Details\n                  </router-link>\n                  <button \n                    v-if=\"!file.processed\" \n                    class=\"btn btn-sm btn-success\" \n                    @click=\"processFile(file.id)\"\n                    :disabled=\"processingFile === file.id\"\n                  >\n                    <span v-if=\"processingFile === file.id\" class=\"spinner-border spinner-border-sm me-1\"></span>\n                    Process\n                  </button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      \n      <div class=\"mt-4 text-center\">\n        <router-link to=\"/upload\" class=\"btn btn-success\">\n          <i class=\"bi bi-upload me-1\"></i> Upload New File\n        </router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\n\nexport default {\n  name: 'FilesView',\n  data() {\n    return {\n      searchTerm: '',\n      processingFile: null\n    }\n  },\n  computed: {\n    ...mapState(['files', 'loading', 'error']),\n    filteredFiles() {\n      if (!this.searchTerm) return this.files\n      \n      const term = this.searchTerm.toLowerCase()\n      return this.files.filter(file => \n        file.title.toLowerCase().includes(term)\n      )\n    }\n  },\n  created() {\n    this.fetchFiles()\n  },\n  methods: {\n    ...mapActions(['fetchFiles', 'processFile']),\n    async processFile(fileId) {\n      this.processingFile = fileId\n      \n      try {\n        await this.$store.dispatch('processFile', fileId)\n        await this.fetchFiles()\n        this.$toast.success('File processed successfully')\n      } catch (error) {\n        this.$toast.error('Failed to process file')\n        console.error('Error processing file:', error)\n      } finally {\n        this.processingFile = null\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return ''\n      const date = new Date(dateString)\n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.table {\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.table thead th {\n  border-bottom: none;\n}\n\n.badge {\n  font-weight: 500;\n  padding: 0.5em 0.8em;\n}\n\n.btn-group .btn {\n  margin-right: 5px;\n}\n</style>\n"],"mappings":";;;;;;;;;;AA0FA,SAASA,QAAQ,EAAEC,UAAS,QAAS,MAAK;AAE1C,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,cAAc,EAAE;IAClB;EACF,CAAC;EACDC,QAAQ,EAAAC,aAAA,CAAAA,aAAA,KACHP,QAAQ,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IAC1CQ,aAAa,WAAbA,aAAaA,CAAA,EAAG;MACd,IAAI,CAAC,IAAI,CAACJ,UAAU,EAAE,OAAO,IAAI,CAACK,KAAI;MAEtC,IAAMC,IAAG,GAAI,IAAI,CAACN,UAAU,CAACO,WAAW,CAAC;MACzC,OAAO,IAAI,CAACF,KAAK,CAACG,MAAM,CAAC,UAAAC,IAAG;QAAA,OAC1BA,IAAI,CAACC,KAAK,CAACH,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,IAAI;MAAA,CACxC;IACF;EAAA,EACD;EACDM,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC;EAClB,CAAC;EACDC,OAAO,EAAAX,aAAA,CAAAA,aAAA,KACFN,UAAU,CAAC,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;IACtCkB,WAAW,WAAXA,WAAWA,CAACC,MAAM,EAAE;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACxBT,KAAI,CAAChB,cAAa,GAAIe,MAAK;cAAAQ,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAGnBT,KAAI,CAACU,MAAM,CAACC,QAAQ,CAAC,aAAa,EAAEZ,MAAM;YAAA;cAAAQ,QAAA,CAAAE,IAAA;cAAA,OAC1CT,KAAI,CAACJ,UAAU,CAAC;YAAA;cACtBI,KAAI,CAACY,MAAM,CAACC,OAAO,CAAC,6BAA6B;cAAAN,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAO,EAAA,GAAAP,QAAA;cAEjDP,KAAI,CAACY,MAAM,CAACG,KAAK,CAAC,wBAAwB;cAC1CC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAAR,QAAA,CAAAO,EAAO;YAAA;cAAAP,QAAA,CAAAC,IAAA;cAE7CR,KAAI,CAAChB,cAAa,GAAI,IAAG;cAAA,OAAAuB,QAAA,CAAAU,MAAA;YAAA;YAAA;cAAA,OAAAV,QAAA,CAAAW,IAAA;UAAA;QAAA,GAAAd,OAAA;MAAA;IAE7B,CAAC;IACDe,UAAU,WAAVA,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAACA,UAAU,EAAE,OAAO,EAAC;MACzB,IAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU;MAChC,OAAO,IAAIG,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;QACtCC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,OAAO;QACdC,GAAG,EAAE,SAAS;QACdC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC,CAACC,MAAM,CAACT,IAAI;IAChB;EAAA;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}