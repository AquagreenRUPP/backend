{"ast":null,"code":"import _regeneratorRuntime from \"D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'FilesView',\n  data: function data() {\n    return {\n      processingFile: null\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['getFiles', 'isLoading', 'getError'])), {}, {\n    files: function files() {\n      return this.getFiles;\n    },\n    loading: function loading() {\n      return this.isLoading;\n    },\n    error: function error() {\n      return this.getError;\n    }\n  }),\n  mounted: function mounted() {\n    this.fetchFiles();\n  },\n  methods: {\n    fetchFiles: function fetchFiles() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.$store.dispatch('fetchFiles');\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    refreshFiles: function refreshFiles() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _this2.fetchFiles();\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    processFile: function processFile(fileId) {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _this3.processingFile = fileId;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _this3.$store.dispatch('processFile', fileId);\n            case 4:\n              _context3.next = 6;\n              return _this3.fetchFiles();\n            case 6:\n              _context3.next = 11;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error('Error processing file:', _context3.t0);\n            case 11:\n              _context3.prev = 11;\n              _this3.processingFile = null;\n              return _context3.finish(11);\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[1, 8, 11, 14]]);\n      }))();\n    },\n    formatDate: function formatDate(dateString) {\n      if (!dateString) return '';\n      var date = new Date(dateString);\n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","processingFile","computed","_objectSpread","files","getFiles","loading","isLoading","error","getError","mounted","fetchFiles","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$store","dispatch","stop","refreshFiles","_this2","_callee2","_callee2$","_context2","processFile","fileId","_this3","_callee3","_callee3$","_context3","t0","console","finish","formatDate","dateString","date","Date","Intl","DateTimeFormat","year","month","day","hour","minute","format"],"sources":["D:\\DSE_Folder\\Year_3\\Sem_2\\Web_Agri_DJango\\frontend\\src\\views\\FilesView.vue"],"sourcesContent":["<template>\n  <div class=\"files\">\n    <h1>Uploaded Files</h1>\n    <p class=\"lead mb-4\">View and manage your uploaded Excel files.</p>\n\n    <div class=\"alert alert-danger\" v-if=\"error\">\n      {{ error }}\n    </div>\n\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\n      <button class=\"btn btn-primary\" @click=\"refreshFiles\">\n        <i class=\"bi bi-arrow-clockwise me-2\"></i> Refresh\n      </button>\n      <router-link to=\"/upload\" class=\"btn btn-success\">\n        <i class=\"bi bi-upload me-2\"></i> Upload New File\n      </router-link>\n    </div>\n\n    <div v-if=\"loading\" class=\"text-center my-5\">\n      <div class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n      <p class=\"mt-2\">Loading files...</p>\n    </div>\n\n    <div v-else-if=\"files.length === 0\" class=\"alert alert-info\">\n      No files uploaded yet. <router-link to=\"/upload\">Upload your first file</router-link>.\n    </div>\n\n    <div v-else class=\"table-responsive\">\n      <table class=\"table table-striped table-hover\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Upload Date</th>\n            <th>Status</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"file in files\" :key=\"file.id\">\n            <td>{{ file.title }}</td>\n            <td>{{ formatDate(file.uploaded_at) }}</td>\n            <td>\n              <span \n                :class=\"file.processed ? 'badge bg-success' : 'badge bg-warning text-dark'\"\n              >\n                {{ file.processed ? 'Processed' : 'Pending' }}\n              </span>\n            </td>\n            <td>\n              <router-link :to=\"'/files/' + file.id\" class=\"btn btn-sm btn-primary me-2\">\n                View Data\n              </router-link>\n              <button \n                v-if=\"!file.processed\" \n                class=\"btn btn-sm btn-secondary\"\n                @click=\"processFile(file.id)\"\n                :disabled=\"processingFile === file.id\"\n              >\n                <span v-if=\"processingFile === file.id\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>\n                Process\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'FilesView',\n  data() {\n    return {\n      processingFile: null\n    }\n  },\n  computed: {\n    ...mapGetters(['getFiles', 'isLoading', 'getError']),\n    files() {\n      return this.getFiles\n    },\n    loading() {\n      return this.isLoading\n    },\n    error() {\n      return this.getError\n    }\n  },\n  mounted() {\n    this.fetchFiles()\n  },\n  methods: {\n    async fetchFiles() {\n      await this.$store.dispatch('fetchFiles')\n    },\n    async refreshFiles() {\n      await this.fetchFiles()\n    },\n    async processFile(fileId) {\n      this.processingFile = fileId\n      try {\n        await this.$store.dispatch('processFile', fileId)\n        // Refresh the files list to update the status\n        await this.fetchFiles()\n      } catch (error) {\n        console.error('Error processing file:', error)\n      } finally {\n        this.processingFile = null\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return ''\n      const date = new Date(dateString)\n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date)\n    }\n  }\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}