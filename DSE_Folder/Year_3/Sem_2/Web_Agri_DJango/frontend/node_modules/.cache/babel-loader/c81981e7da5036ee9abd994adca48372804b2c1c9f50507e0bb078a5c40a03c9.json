{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withModifiers as _withModifiers, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"upload-view\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card border-success mb-4\"\n};\nvar _hoisted_3 = {\n  \"class\": \"card-body\"\n};\nvar _hoisted_4 = {\n  \"class\": \"mb-3\"\n};\nvar _hoisted_5 = {\n  \"class\": \"mb-3\"\n};\nvar _hoisted_6 = {\n  key: 0,\n  \"class\": \"alert alert-danger\"\n};\nvar _hoisted_7 = {\n  \"class\": \"d-grid gap-2\"\n};\nvar _hoisted_8 = [\"disabled\"];\nvar _hoisted_9 = {\n  key: 0,\n  \"class\": \"spinner-border spinner-border-sm me-2\"\n};\nvar _hoisted_10 = {\n  \"class\": \"card border-success\"\n};\nvar _hoisted_11 = {\n  \"class\": \"card-body\"\n};\nvar _hoisted_12 = {\n  \"class\": \"alert alert-success\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[15] || (_cache[15] = _createElementVNode(\"h1\", {\n    \"class\": \"text-success mb-4\"\n  }, \"Upload Greenhouse Data\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n    \"class\": \"card-header bg-success text-white\"\n  }, [_createElementVNode(\"h5\", {\n    \"class\": \"card-title mb-0\"\n  }, \"Upload Excel File\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers(function () {\n      return $options.uploadFile && $options.uploadFile.apply($options, arguments);\n    }, [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_4, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    \"for\": \"title\",\n    \"class\": \"form-label\"\n  }, \"Title\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"class\": \"form-control\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.title = $event;\n    }),\n    placeholder: \"Enter a descriptive title for your data\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]]), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    \"class\": \"form-text\"\n  }, \"Give your file a meaningful name related to your greenhouse data.\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_5, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    \"for\": \"file\",\n    \"class\": \"form-label\"\n  }, \"Excel File\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    \"class\": \"form-control\",\n    id: \"file\",\n    onChange: _cache[1] || (_cache[1] = function () {\n      return $options.handleFileChange && $options.handleFileChange.apply($options, arguments);\n    }),\n    accept: \".xlsx,.xls\",\n    required: \"\"\n  }, null, 32 /* NEED_HYDRATION */), _cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    \"class\": \"form-text\"\n  }, \"Accepted formats: .xlsx, .xls (Excel files only)\", -1 /* HOISTED */))]), $data.fileError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString($data.fileError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    type: \"submit\",\n    \"class\": \"btn btn-success\",\n    disabled: _ctx.loading || !$data.file\n  }, [_ctx.loading ? (_openBlock(), _createElementBlock(\"span\", _hoisted_9)) : _createCommentVNode(\"v-if\", true), _cache[7] || (_cache[7] = _createTextVNode(\" Upload and Process \"))], 8 /* PROPS */, _hoisted_8)])], 32 /* NEED_HYDRATION */)])]), _createElementVNode(\"div\", _hoisted_10, [_cache[14] || (_cache[14] = _createElementVNode(\"div\", {\n    \"class\": \"card-header bg-success text-white\"\n  }, [_createElementVNode(\"h5\", {\n    \"class\": \"card-title mb-0\"\n  }, \"Upload Guidelines\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_11, [_cache[13] || (_cache[13] = _createStaticVNode(\"<h6 class=\\\"card-subtitle mb-3 text-success\\\" data-v-69f57300>How to prepare your greenhouse data files:</h6><ul class=\\\"list-group list-group-flush mb-3\\\" data-v-69f57300><li class=\\\"list-group-item bg-light\\\" data-v-69f57300><i class=\\\"bi bi-check-circle-fill text-success me-2\\\" data-v-69f57300></i> Ensure your Excel file contains greenhouse sensor data in a structured format </li><li class=\\\"list-group-item\\\" data-v-69f57300><i class=\\\"bi bi-check-circle-fill text-success me-2\\\" data-v-69f57300></i> Our system automatically detects and processes all columns in your Excel file </li><li class=\\\"list-group-item bg-light\\\" data-v-69f57300><i class=\\\"bi bi-check-circle-fill text-success me-2\\\" data-v-69f57300></i> Include headers in your Excel file for better data identification </li><li class=\\\"list-group-item\\\" data-v-69f57300><i class=\\\"bi bi-check-circle-fill text-success me-2\\\" data-v-69f57300></i> Maximum file size: 10MB </li></ul>\", 2)), _createElementVNode(\"div\", _hoisted_12, [_cache[10] || (_cache[10] = _createElementVNode(\"i\", {\n    \"class\": \"bi bi-info-circle-fill me-2\"\n  }, null, -1 /* HOISTED */)), _cache[11] || (_cache[11] = _createTextVNode(\" After uploading, you can view and analyze your data in the \")), _createVNode(_component_router_link, {\n    to: \"/files\",\n    \"class\": \"alert-link\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[9] || (_cache[9] = [_createTextVNode(\"Files section\")]);\n    }),\n    _: 1 /* STABLE */\n  }), _cache[12] || (_cache[12] = _createTextVNode(\". \"))])])])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","$options","uploadFile","apply","arguments","_hoisted_4","type","id","$event","$data","title","placeholder","required","_hoisted_5","onChange","handleFileChange","accept","fileError","_hoisted_6","_toDisplayString","_createCommentVNode","_hoisted_7","disabled","_ctx","loading","file","_hoisted_9","_createTextVNode","_hoisted_8","_hoisted_10","_hoisted_11","_createStaticVNode","_hoisted_12","_createVNode","_component_router_link","to","_withCtx","_"],"sources":["D:\\DSE_Folder\\Year_3\\Sem_2\\Web_Agri_DJango\\frontend\\src\\views\\UploadView.vue"],"sourcesContent":["<template>\n  <div class=\"upload-view\">\n    <h1 class=\"text-success mb-4\">Upload Greenhouse Data</h1>\n    \n    <div class=\"card border-success mb-4\">\n      <div class=\"card-header bg-success text-white\">\n        <h5 class=\"card-title mb-0\">Upload Excel File</h5>\n      </div>\n      <div class=\"card-body\">\n        <form @submit.prevent=\"uploadFile\">\n          <div class=\"mb-3\">\n            <label for=\"title\" class=\"form-label\">Title</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"title\"\n              v-model=\"title\"\n              placeholder=\"Enter a descriptive title for your data\"\n              required\n            />\n            <div class=\"form-text\">Give your file a meaningful name related to your greenhouse data.</div>\n          </div>\n          \n          <div class=\"mb-3\">\n            <label for=\"file\" class=\"form-label\">Excel File</label>\n            <input\n              type=\"file\"\n              class=\"form-control\"\n              id=\"file\"\n              @change=\"handleFileChange\"\n              accept=\".xlsx,.xls\"\n              required\n            />\n            <div class=\"form-text\">Accepted formats: .xlsx, .xls (Excel files only)</div>\n          </div>\n          \n          <div v-if=\"fileError\" class=\"alert alert-danger\">\n            {{ fileError }}\n          </div>\n          \n          <div class=\"d-grid gap-2\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-success\"\n              :disabled=\"loading || !file\"\n            >\n              <span v-if=\"loading\" class=\"spinner-border spinner-border-sm me-2\"></span>\n              Upload and Process\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n    \n    <div class=\"card border-success\">\n      <div class=\"card-header bg-success text-white\">\n        <h5 class=\"card-title mb-0\">Upload Guidelines</h5>\n      </div>\n      <div class=\"card-body\">\n        <h6 class=\"card-subtitle mb-3 text-success\">How to prepare your greenhouse data files:</h6>\n        <ul class=\"list-group list-group-flush mb-3\">\n          <li class=\"list-group-item bg-light\">\n            <i class=\"bi bi-check-circle-fill text-success me-2\"></i>\n            Ensure your Excel file contains greenhouse sensor data in a structured format\n          </li>\n          <li class=\"list-group-item\">\n            <i class=\"bi bi-check-circle-fill text-success me-2\"></i>\n            Our system automatically detects and processes all columns in your Excel file\n          </li>\n          <li class=\"list-group-item bg-light\">\n            <i class=\"bi bi-check-circle-fill text-success me-2\"></i>\n            Include headers in your Excel file for better data identification\n          </li>\n          <li class=\"list-group-item\">\n            <i class=\"bi bi-check-circle-fill text-success me-2\"></i>\n            Maximum file size: 10MB\n          </li>\n        </ul>\n        <div class=\"alert alert-success\">\n          <i class=\"bi bi-info-circle-fill me-2\"></i>\n          After uploading, you can view and analyze your data in the <router-link to=\"/files\" class=\"alert-link\">Files section</router-link>.\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n  name: 'UploadView',\n  data() {\n    return {\n      title: '',\n      file: null,\n      fileError: null\n    };\n  },\n  computed: {\n    ...mapState(['loading', 'error'])\n  },\n  methods: {\n    ...mapActions(['uploadFile']),\n    handleFileChange(event) {\n      const selectedFile = event.target.files[0];\n      this.fileError = null;\n      \n      if (!selectedFile) {\n        this.file = null;\n        return;\n      }\n      \n      // Check file type\n      const validTypes = ['application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\n      if (!validTypes.includes(selectedFile.type)) {\n        this.fileError = 'Invalid file type. Please upload an Excel file (.xlsx or .xls)';\n        this.file = null;\n        return;\n      }\n      \n      // Check file size (10MB max)\n      const maxSize = 10 * 1024 * 1024; // 10MB in bytes\n      if (selectedFile.size > maxSize) {\n        this.fileError = 'File is too large. Maximum size is 10MB';\n        this.file = null;\n        return;\n      }\n      \n      this.file = selectedFile;\n    },\n    async uploadFile() {\n      if (!this.file) {\n        this.fileError = 'Please select a file to upload';\n        return;\n      }\n      \n      try {\n        await this.$store.dispatch('uploadFile', {\n          title: this.title,\n          file: this.file\n        });\n        \n        // Reset form\n        this.title = '';\n        this.file = null;\n        document.getElementById('file').value = '';\n        \n        // Show success message\n        this.$toast.success('File uploaded successfully');\n        \n        // Redirect to files page\n        this.$router.push('/files');\n      } catch (error) {\n        this.fileError = error.message || 'Failed to upload file';\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.card {\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n  border-radius: 8px;\n}\n\n.list-group-item {\n  border-left: none;\n  border-right: none;\n}\n\n.list-group-item:first-child {\n  border-top: none;\n}\n\n.list-group-item:last-child {\n  border-bottom: none;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}