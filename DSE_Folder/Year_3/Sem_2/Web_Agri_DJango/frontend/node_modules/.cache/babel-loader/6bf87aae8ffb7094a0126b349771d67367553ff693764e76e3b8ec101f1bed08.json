{"ast":null,"code":"import \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport UploadView from '../views/UploadView.vue';\nimport FilesView from '../views/FilesView.vue';\nimport FileDetailView from '../views/FileDetailView.vue';\nimport LoginView from '../views/LoginView.vue';\nimport RegisterView from '../views/RegisterView.vue';\nimport store from '../store';\nvar routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/upload',\n  name: 'upload',\n  component: UploadView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/files',\n  name: 'files',\n  component: FilesView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/files/:id',\n  name: 'file-detail',\n  component: FileDetailView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/login',\n  name: 'login',\n  component: LoginView,\n  meta: {\n    guest: true\n  }\n}, {\n  path: '/register',\n  name: 'register',\n  component: RegisterView,\n  meta: {\n    guest: true\n  }\n}];\nvar router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes\n});\n\n// Navigation guard\nrouter.beforeEach(function (to, from, next) {\n  var isAuthenticated = store.getters.isAuthenticated;\n\n  // Route requires authentication\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    if (!isAuthenticated) {\n      next({\n        name: 'login'\n      });\n    } else {\n      next();\n    }\n  }\n  // Route is for guests only (like login, register)\n  else if (to.matched.some(function (record) {\n    return record.meta.guest;\n  })) {\n    if (isAuthenticated) {\n      next({\n        name: 'home'\n      });\n    } else {\n      next();\n    }\n  }\n  // Public route\n  else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","UploadView","FilesView","FileDetailView","LoginView","RegisterView","store","routes","path","name","component","meta","requiresAuth","guest","router","history","process","env","BASE_URL","beforeEach","to","from","next","isAuthenticated","getters","matched","some","record"],"sources":["D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport UploadView from '../views/UploadView.vue'\nimport FilesView from '../views/FilesView.vue'\nimport FileDetailView from '../views/FileDetailView.vue'\nimport LoginView from '../views/LoginView.vue'\nimport RegisterView from '../views/RegisterView.vue'\nimport store from '../store'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/upload',\n    name: 'upload',\n    component: UploadView,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/files',\n    name: 'files',\n    component: FilesView,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/files/:id',\n    name: 'file-detail',\n    component: FileDetailView,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: LoginView,\n    meta: { guest: true }\n  },\n  {\n    path: '/register',\n    name: 'register',\n    component: RegisterView,\n    meta: { guest: true }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\n// Navigation guard\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = store.getters.isAuthenticated\n  \n  // Route requires authentication\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!isAuthenticated) {\n      next({ name: 'login' })\n    } else {\n      next()\n    }\n  } \n  // Route is for guests only (like login, register)\n  else if (to.matched.some(record => record.meta.guest)) {\n    if (isAuthenticated) {\n      next({ name: 'home' })\n    } else {\n      next()\n    }\n  } \n  // Public route\n  else {\n    next()\n  }\n})\n\nexport default router\n"],"mappings":";;;;AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,KAAK,MAAM,UAAU;AAE5B,IAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEV,QAAQ;EACnBW,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAET,UAAU;EACrBU,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAER,SAAS;EACpBS,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEP,cAAc;EACzBQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN,SAAS;EACpBO,IAAI,EAAE;IAAEE,KAAK,EAAE;EAAK;AACtB,CAAC,EACD;EACEL,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL,YAAY;EACvBM,IAAI,EAAE;IAAEE,KAAK,EAAE;EAAK;AACtB,CAAC,CACF;AAED,IAAMC,MAAM,GAAGhB,YAAY,CAAC;EAC1BiB,OAAO,EAAEhB,gBAAgB,CAACiB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CX,MAAM,EAANA;AACF,CAAC,CAAC;;AAEF;AACAO,MAAM,CAACK,UAAU,CAAC,UAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAK;EACpC,IAAMC,eAAe,GAAGjB,KAAK,CAACkB,OAAO,CAACD,eAAe;;EAErD;EACA,IAAIH,EAAE,CAACK,OAAO,CAACC,IAAI,CAAC,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAAChB,IAAI,CAACC,YAAY;EAAA,EAAC,EAAE;IACvD,IAAI,CAACW,eAAe,EAAE;MACpBD,IAAI,CAAC;QAAEb,IAAI,EAAE;MAAQ,CAAC,CAAC;IACzB,CAAC,MAAM;MACLa,IAAI,CAAC,CAAC;IACR;EACF;EACA;EAAA,KACK,IAAIF,EAAE,CAACK,OAAO,CAACC,IAAI,CAAC,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAAChB,IAAI,CAACE,KAAK;EAAA,EAAC,EAAE;IACrD,IAAIU,eAAe,EAAE;MACnBD,IAAI,CAAC;QAAEb,IAAI,EAAE;MAAO,CAAC,CAAC;IACxB,CAAC,MAAM;MACLa,IAAI,CAAC,CAAC;IACR;EACF;EACA;EAAA,KACK;IACHA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}