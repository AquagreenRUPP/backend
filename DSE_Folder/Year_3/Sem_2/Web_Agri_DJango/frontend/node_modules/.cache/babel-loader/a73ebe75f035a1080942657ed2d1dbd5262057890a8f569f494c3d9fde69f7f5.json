{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  name: 'FilesView',\n  data() {\n    return {\n      processingFile: null\n    };\n  },\n  computed: {\n    ...mapGetters(['getFiles', 'isLoading', 'getError']),\n    files() {\n      return this.getFiles;\n    },\n    loading() {\n      return this.isLoading;\n    },\n    error() {\n      return this.getError;\n    }\n  },\n  mounted() {\n    this.fetchFiles();\n  },\n  methods: {\n    async fetchFiles() {\n      await this.$store.dispatch('fetchFiles');\n    },\n    async refreshFiles() {\n      await this.fetchFiles();\n    },\n    async processFile(fileId) {\n      this.processingFile = fileId;\n      try {\n        await this.$store.dispatch('processFile', fileId);\n        // Refresh the files list to update the status\n        await this.fetchFiles();\n      } catch (error) {\n        console.error('Error processing file:', error);\n      } finally {\n        this.processingFile = null;\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","processingFile","computed","files","getFiles","loading","isLoading","error","getError","mounted","fetchFiles","methods","$store","dispatch","refreshFiles","processFile","fileId","console","formatDate","dateString","date","Date","Intl","DateTimeFormat","year","month","day","hour","minute","format"],"sources":["D:\\DSE_Folder\\Year_3\\Sem_2\\Web_Agri_DJango\\frontend\\src\\views\\FilesView.vue"],"sourcesContent":["<template>\n  <div class=\"files\">\n    <h1>Uploaded Files</h1>\n    <p class=\"lead mb-4\">View and manage your uploaded Excel files.</p>\n\n    <div class=\"alert alert-danger\" v-if=\"error\">\n      {{ error }}\n    </div>\n\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\n      <button class=\"btn btn-primary\" @click=\"refreshFiles\">\n        <i class=\"bi bi-arrow-clockwise me-2\"></i> Refresh\n      </button>\n      <router-link to=\"/upload\" class=\"btn btn-success\">\n        <i class=\"bi bi-upload me-2\"></i> Upload New File\n      </router-link>\n    </div>\n\n    <div v-if=\"loading\" class=\"text-center my-5\">\n      <div class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n      <p class=\"mt-2\">Loading files...</p>\n    </div>\n\n    <div v-else-if=\"files.length === 0\" class=\"alert alert-info\">\n      No files uploaded yet. <router-link to=\"/upload\">Upload your first file</router-link>.\n    </div>\n\n    <div v-else class=\"table-responsive\">\n      <table class=\"table table-striped table-hover\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Upload Date</th>\n            <th>Status</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"file in files\" :key=\"file.id\">\n            <td>{{ file.title }}</td>\n            <td>{{ formatDate(file.uploaded_at) }}</td>\n            <td>\n              <span \n                :class=\"file.processed ? 'badge bg-success' : 'badge bg-warning text-dark'\"\n              >\n                {{ file.processed ? 'Processed' : 'Pending' }}\n              </span>\n            </td>\n            <td>\n              <router-link :to=\"'/files/' + file.id\" class=\"btn btn-sm btn-primary me-2\">\n                View Data\n              </router-link>\n              <button \n                v-if=\"!file.processed\" \n                class=\"btn btn-sm btn-secondary\"\n                @click=\"processFile(file.id)\"\n                :disabled=\"processingFile === file.id\"\n              >\n                <span v-if=\"processingFile === file.id\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>\n                Process\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'FilesView',\n  data() {\n    return {\n      processingFile: null\n    }\n  },\n  computed: {\n    ...mapGetters(['getFiles', 'isLoading', 'getError']),\n    files() {\n      return this.getFiles\n    },\n    loading() {\n      return this.isLoading\n    },\n    error() {\n      return this.getError\n    }\n  },\n  mounted() {\n    this.fetchFiles()\n  },\n  methods: {\n    async fetchFiles() {\n      await this.$store.dispatch('fetchFiles')\n    },\n    async refreshFiles() {\n      await this.fetchFiles()\n    },\n    async processFile(fileId) {\n      this.processingFile = fileId\n      try {\n        await this.$store.dispatch('processFile', fileId)\n        // Refresh the files list to update the status\n        await this.fetchFiles()\n      } catch (error) {\n        console.error('Error processing file:', error)\n      } finally {\n        this.processingFile = null\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return ''\n      const date = new Date(dateString)\n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date)\n    }\n  }\n}\n</script>\n"],"mappings":"AAwEA,SAASA,UAAS,QAAS,MAAK;AAEhC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE;IAClB;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGJ,UAAU,CAAC,CAAC,UAAU,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;IACpDK,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAACC,QAAO;IACrB,CAAC;IACDC,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACC,SAAQ;IACtB,CAAC;IACDC,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAACC,QAAO;IACrB;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,UAAUA,CAAA,EAAG;MACjB,MAAM,IAAI,CAACE,MAAM,CAACC,QAAQ,CAAC,YAAY;IACzC,CAAC;IACD,MAAMC,YAAYA,CAAA,EAAG;MACnB,MAAM,IAAI,CAACJ,UAAU,CAAC;IACxB,CAAC;IACD,MAAMK,WAAWA,CAACC,MAAM,EAAE;MACxB,IAAI,CAACf,cAAa,GAAIe,MAAK;MAC3B,IAAI;QACF,MAAM,IAAI,CAACJ,MAAM,CAACC,QAAQ,CAAC,aAAa,EAAEG,MAAM;QAChD;QACA,MAAM,IAAI,CAACN,UAAU,CAAC;MACxB,EAAE,OAAOH,KAAK,EAAE;QACdU,OAAO,CAACV,KAAK,CAAC,wBAAwB,EAAEA,KAAK;MAC/C,UAAU;QACR,IAAI,CAACN,cAAa,GAAI,IAAG;MAC3B;IACF,CAAC;IACDiB,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAACA,UAAU,EAAE,OAAO,EAAC;MACzB,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU;MAChC,OAAO,IAAIG,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;QACtCC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,OAAO;QACdC,GAAG,EAAE,SAAS;QACdC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC,CAACC,MAAM,CAACT,IAAI;IAChB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}