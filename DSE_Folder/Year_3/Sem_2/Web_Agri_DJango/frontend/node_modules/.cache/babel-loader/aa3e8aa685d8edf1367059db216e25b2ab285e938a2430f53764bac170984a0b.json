{"ast":null,"code":"import _regeneratorRuntime from \"D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _typeof from \"D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _asyncToGenerator from \"D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"D:/DSE_Folder/Year_3/Sem_2/Web_Agri_DJango/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { mapActions } from 'vuex';\nexport default {\n  name: 'RegisterView',\n  data: function data() {\n    return {\n      fullName: '',\n      email: '',\n      phone: '',\n      username: '',\n      password: '',\n      confirmPassword: '',\n      loading: false,\n      error: null\n    };\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(['registerUser'])), {}, {\n    register: function register() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var errorData, errorMessages, field, messages;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.loading = true;\n              _this.error = null;\n              if (!(_this.password !== _this.confirmPassword)) {\n                _context.next = 6;\n                break;\n              }\n              _this.error = 'Passwords do not match';\n              _this.loading = false;\n              return _context.abrupt(\"return\");\n            case 6:\n              _context.prev = 6;\n              _context.next = 9;\n              return _this.registerUser({\n                full_name: _this.fullName,\n                email: _this.email,\n                phone: _this.phone,\n                username: _this.username,\n                password: _this.password\n              });\n            case 9:\n              _this.$router.push('/');\n              _context.next = 16;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](6);\n              console.error('Registration error:', _context.t0);\n              if (_context.t0.response && _context.t0.response.data) {\n                // Handle different types of error responses\n                errorData = _context.t0.response.data;\n                if (typeof errorData === 'string') {\n                  _this.error = errorData;\n                } else if (_typeof(errorData) === 'object') {\n                  // Format field-specific errors\n                  errorMessages = [];\n                  for (field in errorData) {\n                    messages = Array.isArray(errorData[field]) ? errorData[field].join(', ') : errorData[field];\n                    errorMessages.push(\"\".concat(field, \": \").concat(messages));\n                  }\n                  _this.error = errorMessages.join('\\n');\n                } else {\n                  _this.error = 'Registration failed. Please try again.';\n                }\n              } else {\n                _this.error = 'Registration failed. Please try again.';\n              }\n            case 16:\n              _context.prev = 16;\n              _this.loading = false;\n              return _context.finish(16);\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[6, 12, 16, 19]]);\n      }))();\n    }\n  })\n};","map":{"version":3,"names":["mapActions","name","data","fullName","email","phone","username","password","confirmPassword","loading","error","methods","_objectSpread","register","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","errorData","errorMessages","field","messages","wrap","_callee$","_context","prev","next","abrupt","registerUser","full_name","$router","push","t0","console","response","_typeof","Array","isArray","join","concat","finish","stop"],"sources":["D:\\DSE_Folder\\Year_3\\Sem_2\\Web_Agri_DJango\\frontend\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <div class=\"card register-card\">\n      <div class=\"card-body\">\n        <h2 class=\"text-center mb-4\">\n          <span class=\"brand-name\">Aqua<span class=\"text-success\">Green</span></span>\n        </h2>\n        <div v-if=\"error\" class=\"alert alert-danger\">{{ error }}</div>\n        <form @submit.prevent=\"register\">\n          <!-- Optional fields -->\n          <div class=\"form-group mb-3\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              v-model=\"fullName\"\n              placeholder=\"Full Name (Optional)\"\n            />\n          </div>\n          <div class=\"form-group mb-3\">\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              v-model=\"email\"\n              placeholder=\"Email (Optional)\"\n            />\n          </div>\n          <div class=\"form-group mb-3\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              v-model=\"phone\"\n              placeholder=\"Phone (Optional)\"\n            />\n          </div>\n          <!-- Required fields -->\n          <div class=\"form-group mb-3\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              v-model=\"username\"\n              placeholder=\"Username\"\n              required\n            />\n          </div>\n          <div class=\"form-group mb-3\">\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              v-model=\"password\"\n              placeholder=\"Password\"\n              required\n            />\n          </div>\n          <div class=\"form-group mb-3\">\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              v-model=\"confirmPassword\"\n              placeholder=\"Confirm Password\"\n              required\n            />\n          </div>\n          <button\n            type=\"submit\"\n            class=\"btn btn-success w-100 mt-3\"\n            :disabled=\"loading\"\n          >\n            <span v-if=\"loading\" class=\"spinner-border spinner-border-sm mr-2\"></span>\n            Sign up\n          </button>\n        </form>\n        <div class=\"mt-3 text-center\">\n          <p>Already have an account? <router-link to=\"/login\" class=\"text-success\">Log In</router-link></p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex';\n\nexport default {\n  name: 'RegisterView',\n  data() {\n    return {\n      fullName: '',\n      email: '',\n      phone: '',\n      username: '',\n      password: '',\n      confirmPassword: '',\n      loading: false,\n      error: null\n    };\n  },\n  methods: {\n    ...mapActions(['registerUser']),\n    async register() {\n      this.loading = true;\n      this.error = null;\n      \n      if (this.password !== this.confirmPassword) {\n        this.error = 'Passwords do not match';\n        this.loading = false;\n        return;\n      }\n      \n      try {\n        await this.registerUser({\n          full_name: this.fullName,\n          email: this.email,\n          phone: this.phone,\n          username: this.username,\n          password: this.password\n        });\n        this.$router.push('/');\n      } catch (error) {\n        console.error('Registration error:', error);\n        if (error.response && error.response.data) {\n          // Handle different types of error responses\n          const errorData = error.response.data;\n          if (typeof errorData === 'string') {\n            this.error = errorData;\n          } else if (typeof errorData === 'object') {\n            // Format field-specific errors\n            const errorMessages = [];\n            for (const field in errorData) {\n              const messages = Array.isArray(errorData[field]) ? errorData[field].join(', ') : errorData[field];\n              errorMessages.push(`${field}: ${messages}`);\n            }\n            this.error = errorMessages.join('\\n');\n          } else {\n            this.error = 'Registration failed. Please try again.';\n          }\n        } else {\n          this.error = 'Registration failed. Please try again.';\n        }\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.register-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f8f9fa;\n}\n\n.register-card {\n  width: 100%;\n  max-width: 400px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border: none;\n  border-radius: 10px;\n}\n\n.brand-name {\n  font-size: 2rem;\n  font-weight: bold;\n}\n</style>\n"],"mappings":";;;;;;;;AAgFA,SAASA,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAAC,aAAA,CAAAA,aAAA,KACFZ,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC;IACzBa,QAAQ,WAARA,QAAQA,CAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,SAAA,EAAAC,aAAA,EAAAC,KAAA,EAAAC,QAAA;QAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACfb,KAAI,CAACL,OAAM,GAAI,IAAI;cACnBK,KAAI,CAACJ,KAAI,GAAI,IAAI;cAAA,MAEbI,KAAI,CAACP,QAAO,KAAMO,KAAI,CAACN,eAAe;gBAAAiB,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACxCb,KAAI,CAACJ,KAAI,GAAI,wBAAwB;cACrCI,KAAI,CAACL,OAAM,GAAI,KAAK;cAAA,OAAAgB,QAAA,CAAAG,MAAA;YAAA;cAAAH,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAKdb,KAAI,CAACe,YAAY,CAAC;gBACtBC,SAAS,EAAEhB,KAAI,CAACX,QAAQ;gBACxBC,KAAK,EAAEU,KAAI,CAACV,KAAK;gBACjBC,KAAK,EAAES,KAAI,CAACT,KAAK;gBACjBC,QAAQ,EAAEQ,KAAI,CAACR,QAAQ;gBACvBC,QAAQ,EAAEO,KAAI,CAACP;cACjB,CAAC,CAAC;YAAA;cACFO,KAAI,CAACiB,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;cAAAP,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAQ,EAAA,GAAAR,QAAA;cAEtBS,OAAO,CAACxB,KAAK,CAAC,qBAAqB,EAAAe,QAAA,CAAAQ,EAAO,CAAC;cAC3C,IAAIR,QAAA,CAAAQ,EAAA,CAAME,QAAO,IAAKV,QAAA,CAAAQ,EAAA,CAAME,QAAQ,CAACjC,IAAI,EAAE;gBACzC;gBACMiB,SAAQ,GAAIM,QAAA,CAAAQ,EAAA,CAAME,QAAQ,CAACjC,IAAI;gBACrC,IAAI,OAAOiB,SAAQ,KAAM,QAAQ,EAAE;kBACjCL,KAAI,CAACJ,KAAI,GAAIS,SAAS;gBACxB,OAAO,IAAIiB,OAAA,CAAOjB,SAAQ,MAAM,QAAQ,EAAE;kBACxC;kBACMC,aAAY,GAAI,EAAE;kBACxB,KAAWC,KAAI,IAAKF,SAAS,EAAE;oBACvBG,QAAO,GAAIe,KAAK,CAACC,OAAO,CAACnB,SAAS,CAACE,KAAK,CAAC,IAAIF,SAAS,CAACE,KAAK,CAAC,CAACkB,IAAI,CAAC,IAAI,IAAIpB,SAAS,CAACE,KAAK,CAAC;oBACjGD,aAAa,CAACY,IAAI,IAAAQ,MAAA,CAAInB,KAAK,QAAAmB,MAAA,CAAKlB,QAAQ,CAAE,CAAC;kBAC7C;kBACAR,KAAI,CAACJ,KAAI,GAAIU,aAAa,CAACmB,IAAI,CAAC,IAAI,CAAC;gBACvC,OAAO;kBACLzB,KAAI,CAACJ,KAAI,GAAI,wCAAwC;gBACvD;cACF,OAAO;gBACLI,KAAI,CAACJ,KAAI,GAAI,wCAAwC;cACvD;YAAA;cAAAe,QAAA,CAAAC,IAAA;cAEAZ,KAAI,CAACL,OAAM,GAAI,KAAK;cAAA,OAAAgB,QAAA,CAAAgB,MAAA;YAAA;YAAA;cAAA,OAAAhB,QAAA,CAAAiB,IAAA;UAAA;QAAA,GAAAxB,OAAA;MAAA;IAExB;EAAA;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}